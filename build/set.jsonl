{"goal":"negate_fn[K](negate_fn[K](f))(x) implies not not f(x)","proof":["negate_fn(f, x) != f(x)","negate_fn(negate_fn[K](f), x) != negate_fn(f, x)","negate_fn(f, x) or f(x)","negate_fn(f, x)","not negate_fn(negate_fn[K](f), x) or not negate_fn(f, x)"]}
{"goal":"negate_fn[K](negate_fn[K](f))(x) = f(x)","proof":["negate_fn(negate_fn[K](f), x) or f(x)","f(x)","not negate_fn(negate_fn[K](f), x)","negate_fn(f, x) != f(x)","negate_fn(negate_fn[K](f), x) != negate_fn(f, x)","negate_fn(negate_fn[K](f), x) or negate_fn(f, x)","not negate_fn(f, x) or not f(x)","negate_fn(f, x)","not negate_fn(f, x)"]}
{"goal":"reflect_of_nagate_fn","proof":["let s0: K satisfy { negate_fn(negate_fn[K](f), s0) != f(s0) }","negate_fn(negate_fn[K](f), s0) = f(s0)"]}
{"goal":"dual_of_constant_bool_fn","proof":["let s0: K satisfy { negate_fn(constant_false[K], s0) != constant_true(s0) }","let s1: K satisfy { forall(x0: K) { not dual_of_constant_bool_fn[K] or negate_fn(constant_false[K], x0) = constant_true(x0) } and (negate_fn(constant_false[K], s1) != constant_true(s1) or dual_of_constant_bool_fn[K]) }","not dual_of_constant_bool_fn[K] or negate_fn(constant_false[K], s0) = constant_true(s0)","not dual_of_constant_bool_fn[K]","negate_fn(constant_false[K], s1) != constant_true(s1)","negate_fn(constant_false[K], s1) != constant_false(s1)","constant_true(s1)","not negate_fn(constant_false[K], s1)","not constant_false(s1)","negate_fn(constant_false[K], s1) or constant_false(s1)"]}
{"goal":"a.is_empty implies a.contains = constant_false[K]","proof":["let s0: K satisfy { s0 ∈ a != constant_false(s0) }","s0 ∈ a or constant_false(s0)","not a.is_empty or not s0 ∈ a","not constant_false(s0)","s0 ∈ a"]}
{"goal":"a = empty[K]","proof":["let s0: K satisfy { true }","not a.is_empty or s0 ∈ a = constant_false(s0)","s0 ∈ a = constant_false(s0)","a.contains = constant_false[K]","Set.new[K](a.contains) = a","Set.new[K](a.contains) != empty[K]","Set.new[K](constant_false[K]) != empty[K]","Set.empty_set[K] != empty[K]"]}
{"goal":"empty_set_is_empty","proof":["not a.is_empty","empty[K] = a","not empty[K].is_empty","let s0: Set[K] -> K satisfy { forall(x0: Set[K], x1: K) { not x0.is_empty or not x1 ∈ x0 } and forall(x2: Set[K]) { s0(x2) ∈ x2 or x2.is_empty } }","s0(Set.empty_set[K]) ∈ Set.empty_set[K] or Set.empty_set[K].is_empty","s0(Set.empty_set[K]) ∈ Set.new[K](constant_false[K]) = constant_false(s0(Set.empty_set[K]))","not constant_false(s0(Set.empty_set[K]))","not s0(Set.empty_set[K]) ∈ Set.new[K](constant_false[K]) or constant_false(s0(Set.empty_set[K]))","not Set.empty_set[K].is_empty","s0(Set.empty_set[K]) ∈ Set.empty_set[K]","s0(Set.empty_set[K]) ∈ Set.new[K](constant_false[K])"]}
{"goal":"singleton_set_is_singleton","proof":["let s0: Set[K] -> K satisfy { forall(x0: Set[K]) { not x0.is_singleton or Set.singleton(s0(x0)) = x0 } and forall(x1: K, x2: Set[K]) { Set.singleton(x1) != x2 or x2.is_singleton } }","Set.singleton(s0(a)) != a","not a.is_singleton or Set.singleton(s0(a)) = a"]}
{"goal":"not a.contains(x) = a.not_contains(x)","proof":["x ∉ a != x ∈ a"]}
{"goal":"not a.contains(x) = negate_fn[K](a.contains)(x)","proof":["negate_fn(a.contains, x) != x ∈ a"]}
{"goal":"a.not_contains(x) implies negate_fn[K](a.contains)(x)","proof":["not x ∈ a","x ∈ a"]}
{"goal":"a.not_contains(x) = negate_fn[K](a.contains)(x)","proof":["negate_fn(a.contains, x) or x ∉ a","not negate_fn(a.contains, x) or not x ∉ a","not x ∉ a","negate_fn(a.contains, x)","x ∈ a","not x ∈ a"]}
{"goal":"non_contains_is_negate_contains","proof":["let s0: K satisfy { negate_fn(a.contains, s0) != s0 ∉ a }","negate_fn(a.contains, s0) = s0 ∉ a"]}
{"goal":"not_contains_is_not_in","proof":["x ∉ a != x ∈ a"]}
{"goal":"element_not_in_is_element_in_compl","proof":["x ∈ Set.new[K](a.not_contains) = x ∉ a","Set.new[K](a.not_contains) = a.c","x ∈ Set.new[K](a.not_contains) != x ∉ a"]}
{"goal":"compl_contains_is_non_contains","proof":["let s0: K satisfy { s0 ∈ a.c != s0 ∉ a }","s0 ∈ a.c = s0 ∉ a"]}
{"goal":"x ∈ a.c.c implies not not x ∈ a","proof":["x ∈ a.c = x ∉ a","x ∈ a.c.c = x ∉ a.c","x ∉ a.c","x ∉ a != x ∈ a","x ∉ a.c != x ∈ a.c","x ∉ a or x ∈ a","x ∉ a","not x ∉ a.c or not x ∈ a.c","x ∈ a.c","not x ∈ a.c"]}
{"goal":"x ∈ a.c.c = x ∈ a","proof":["x ∈ a.c.c or x ∈ a","x ∈ a","x ∈ a.c.c = x ∉ a.c","x ∉ a.c != x ∈ a","not x ∉ a.c","x ∈ a.c = x ∉ a","x ∉ a != x ∈ a","x ∉ a.c != x ∈ a.c","x ∉ a.c or x ∈ a.c","not x ∉ a or not x ∈ a","not x ∉ a","x ∈ a.c","not x ∈ a.c"]}
{"goal":"a.c.c.contains = a.contains","proof":["let s0: K satisfy { s0 ∈ a.c.c != s0 ∈ a }","s0 ∈ a.c.c = s0 ∈ a"]}
{"goal":"compl_is_reflect","proof":["Set.new[K](a.c.not_contains) = a.c.c","Set.new[K](Set.new[K](a.c.not_contains).contains) = Set.new[K](a.c.not_contains)","Set.new[K](a.contains) = a"]}
{"goal":"empty[K].c.contains = universe[K].contains","proof":["let s0: K satisfy { s0 ∈ empty[K].c != s0 ∈ universe[K] }","s0 ∈ empty[K].c = s0 ∉ empty[K]","s0 ∉ empty[K] != s0 ∈ empty[K]","s0 ∈ Set.new[K](constant_true[K]) = constant_true(s0)","not empty[K].is_empty or not s0 ∈ empty[K]","empty[K] != empty[K] or empty[K].is_empty","empty[K].is_empty","constant_true(s0)","s0 ∈ empty[K].c != s0 ∈ Set.universal_set[K]","s0 ∉ empty[K] or s0 ∈ empty[K]","s0 ∈ empty[K].c != s0 ∈ Set.new[K](constant_true[K])","s0 ∈ empty[K].c != constant_true(s0)","s0 ∉ empty[K] != constant_true(s0)","not s0 ∉ empty[K]","s0 ∈ empty[K]"]}
{"goal":"empty[K].c = universe[K]","proof":["Set.new[K](empty[K].not_contains) = empty[K].c","Set.new[K](Set.new[K](empty[K].not_contains).contains) = Set.new[K](empty[K].not_contains)","Set.new[K](universe[K].contains) = universe[K]"]}
{"goal":"dual_of_empty_set_and_universal","proof":["empty[K].c.c != empty[K]","empty[K].c.c = empty[K]"]}
{"goal":"singleton_set_is_not_empty","proof":["a ∈ Set.new[K](singleton_fn(a)) = singleton_fn(a, a)","not Set.new[K](singleton_fn(a)).is_empty or not a ∈ Set.new[K](singleton_fn(a))","Set.new[K](singleton_fn(a)) = Set.singleton(a)","Set.new[K](singleton_fn(a)).is_empty","a != a or singleton_fn(a, a)","singleton_fn(a, a)","not singleton_fn(a, a) or a ∈ Set.new[K](singleton_fn(a))","not a ∈ Set.new[K](singleton_fn(a))","not singleton_fn(a, a)"]}
{"goal":"a ⊆ b implies b ⊇ a","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊇ x1 or not x2 ∈ x1 or x2 ∈ x0 } and forall(x3: Set[K], x4: Set[K]) { s0(x4, x3) ∈ x3 or x4 ⊇ x3 } and forall(x5: Set[K], x6: Set[K]) { not s0(x5, x6) ∈ x5 or x5 ⊇ x6 } }","not a ⊆ b or not s0(b, a) ∈ a or s0(b, a) ∈ b","not s0(b, a) ∈ b or b ⊇ a","not s0(b, a) ∈ b","s0(b, a) ∈ a or b ⊇ a","s0(b, a) ∈ a","not s0(b, a) ∈ a or s0(b, a) ∈ b"]}
{"goal":"sym_of_subset_and_supset","proof":["b ⊇ a or a ⊆ b","b ⊇ a","not a ⊆ b","let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not b ⊇ a or not s0(a, b) ∈ a or s0(a, b) ∈ b","not s0(a, b) ∈ b or a ⊆ b","s0(a, b) ∈ a or a ⊆ b","not s0(a, b) ∈ a or s0(a, b) ∈ b","s0(a, b) ∈ a","not s0(a, b) ∈ b","s0(a, b) ∈ b"]}
{"goal":"empty_set_is_always_subset","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","s0(empty[K], a) ∈ empty[K] or empty[K] ⊆ a","s0(empty[K], a) ∈ empty[K]","not empty[K].is_empty or not s0(empty[K], a) ∈ empty[K]","empty[K] != empty[K] or empty[K].is_empty","not empty[K].is_empty","empty[K].is_empty"]}
{"goal":"all_sets_subset_universal","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not empty[K] ⊆ universe[K] or not s0(a, universe[K]) ∈ empty[K] or s0(a, universe[K]) ∈ universe[K]","not s0(a, universe[K]) ∈ universe[K] or a ⊆ universe[K]","not s0(a, universe[K]) ∈ universe[K]","s0(a, universe[K]) ∈ empty[K].c = s0(a, universe[K]) ∉ empty[K]","s0(a, universe[K]) ∉ empty[K] != s0(a, universe[K]) ∈ empty[K]","empty[K] ⊆ universe[K]","s0(a, universe[K]) ∉ empty[K] or s0(a, universe[K]) ∈ empty[K]","not s0(a, universe[K]) ∈ empty[K].c","not s0(a, universe[K]) ∉ empty[K]","not s0(a, universe[K]) ∈ empty[K] or not empty[K] ⊆ universe[K]","s0(a, universe[K]) ∈ empty[K]","not s0(a, universe[K]) ∈ empty[K]"]}
{"goal":"subset_self","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a, a) ∈ a or a ⊆ a","not s0(a, a) ∈ a","s0(a, a) ∈ a or a ⊆ a"]}
{"goal":"subset_trans","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not a1 ⊆ a2 or not s0(a1, a3) ∈ a1 or s0(a1, a3) ∈ a2","not a2 ⊆ a3 or not s0(a1, a3) ∈ a2 or s0(a1, a3) ∈ a3","not s0(a1, a3) ∈ a3 or a1 ⊆ a3","not s0(a1, a3) ∈ a3","s0(a1, a3) ∈ a1 or a1 ⊆ a3","s0(a1, a3) ∈ a1","not s0(a1, a3) ∈ a2 or s0(a1, a3) ∈ a3","not s0(a1, a3) ∈ a1 or s0(a1, a3) ∈ a2","not s0(a1, a3) ∈ a2","s0(a1, a3) ∈ a2"]}
{"goal":"x ∈ a1 implies x ∈ a2","proof":["not a2 ⊇ a1 or not x ∈ a1 or x ∈ a2","a2 ⊇ a1 = a1 ⊆ a2","not a2 ⊇ a1 or not x ∈ a1","a2 ⊇ a1","not a2 ⊇ a1"]}
{"goal":"x ∈ a2 implies x ∈ a1","proof":["not a1 ⊇ a2 or not x ∈ a2 or x ∈ a1","not a1 ⊇ a2 or not x ∈ a2"]}
{"goal":"x ∈ a1 = x ∈ a2","proof":["x ∈ a2 or x ∈ a1","x ∈ a2","x ∈ a1","not x ∈ a1"]}
{"goal":"a1.contains = a2.contains","proof":["let s0: K satisfy { s0 ∈ a2 != s0 ∈ a1 }","s0 ∈ a2 = s0 ∈ a1"]}
{"goal":"a1 = a2","proof":["Set.new[K](a1.contains) = a1","Set.new[K](a2.contains) = a2"]}
{"goal":"a1 = a2 implies a1 ⊆ a2","proof":["not a2 ⊆ a2","let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a2, a2) ∈ a2 or a2 ⊆ a2","s0(a2, a2) ∈ a2 or a2 ⊆ a2","not s0(a2, a2) ∈ a2","s0(a2, a2) ∈ a2"]}
{"goal":"a1 = a2 implies a2 ⊆ a1","proof":["not a1 ⊆ a1","not a1 ⊆ a2"]}
{"goal":"subset_and_supset_iff_equal","proof":["a1 ⊆ a2","a2 = a1","a2 ⊆ a1","not a1 ⊇ a2","a1 ⊇ a2 = a2 ⊆ a1"]}
{"goal":"a = b implies set_eq_prop[K](a, b)","proof":["not set_eq_prop[K](b, b)","let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","not s0(b, b) ∈ b or not s0(b, b) ∈ b or set_eq_prop[K](b, b)","s0(b, b) ∈ b or s0(b, b) ∈ b or set_eq_prop[K](b, b)","not s0(b, b) ∈ b","s0(b, b) ∈ b"]}
{"goal":"set_eq_prop[K](a, b) implies a ⊆ b","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not set_eq_prop[K](a, b) or not s0(a, b) ∈ a or s0(a, b) ∈ b","not s0(a, b) ∈ b or a ⊆ b","not s0(a, b) ∈ b","s0(a, b) ∈ a or a ⊆ b","s0(a, b) ∈ a","not s0(a, b) ∈ a or s0(a, b) ∈ b"]}
{"goal":"set_eq_prop[K](a, b) implies a ⊇ b","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not set_eq_prop[K](a, b) or not s0(b, a) ∈ b or s0(b, a) ∈ a","not s0(b, a) ∈ a or b ⊆ a","s0(b, a) ∈ b or b ⊆ a","a ⊇ b = b ⊆ a","not b ⊆ a","s0(b, a) ∈ b","not s0(b, a) ∈ a","not s0(b, a) ∈ b or s0(b, a) ∈ a"]}
{"goal":"set_equal_representation","proof":["b != a","set_eq_prop[K](a, b)","not a ⊇ b or not a ⊆ b or b = a"]}
{"goal":"x ∈ a1 ∪ a2 implies x ∈ a1 or x ∈ a2","proof":["not elem_in_union(a1, a2, x) or x ∈ a1 or x ∈ a2","Set.new[K](elem_in_union[K](a1, a2)) = a1 ∪ a2","x ∈ Set.new[K](elem_in_union[K](a1, a2)) = elem_in_union(a1, a2, x)","not elem_in_union(a1, a2, x) or x ∈ a1","not elem_in_union(a1, a2, x)","not x ∈ Set.new[K](elem_in_union[K](a1, a2)) or elem_in_union(a1, a2, x)","x ∈ Set.new[K](elem_in_union[K](a1, a2))"]}
{"goal":"x ∈ a1 or x ∈ a2 implies x ∈ a1 ∪ a2","proof":["Set.new[K](elem_in_union[K](a1, a2)) = a1 ∪ a2","not x ∈ a2 or elem_in_union(a1, a2, x)","not x ∈ a1 or elem_in_union(a1, a2, x)","x ∈ Set.new[K](elem_in_union[K](a1, a2)) = elem_in_union(a1, a2, x)","not x ∈ Set.new[K](elem_in_union[K](a1, a2))","not elem_in_union(a1, a2, x)","not x ∈ a1","not x ∈ a2","x ∈ a2"]}
{"goal":"in_union","proof":["not x ∈ a2","not x ∈ a1","not x ∈ a1 ∪ a2","x ∈ a1 ∪ a2"]}
{"goal":"x ∈ a1 ∩ a2 implies x ∈ a1 and x ∈ a2","proof":["Set.new[K](elem_in_intersection[K](a1, a2)) = a1 ∩ a2","not elem_in_intersection(a1, a2, x) or x ∈ a2","not elem_in_intersection(a1, a2, x) or x ∈ a1","x ∈ Set.new[K](elem_in_intersection[K](a1, a2)) = elem_in_intersection(a1, a2, x)","x ∈ Set.new[K](elem_in_intersection[K](a1, a2))","elem_in_intersection(a1, a2, x)","x ∈ a1","x ∈ a2","not x ∈ a2"]}
{"goal":"in_intersection","proof":["x ∈ a2","x ∈ a1","not x ∈ a1 ∩ a2","not x ∈ a1 or not x ∈ a2 or elem_in_intersection(a1, a2, x)","Set.new[K](elem_in_intersection[K](a1, a2)) = a1 ∩ a2","x ∈ Set.new[K](elem_in_intersection[K](a1, a2)) = elem_in_intersection(a1, a2, x)","not x ∈ a1 or elem_in_intersection(a1, a2, x)","elem_in_intersection(a1, a2, x)","not elem_in_intersection(a1, a2, x) or x ∈ Set.new[K](elem_in_intersection[K](a1, a2))","not x ∈ Set.new[K](elem_in_intersection[K](a1, a2))"]}
{"goal":"x ∈ a ∖ b implies x ∈ a and x ∉ b","proof":["Set.new[K](elem_in_difference[K](a, b)) = a ∖ b","not elem_in_difference(a, b, x) or not x ∈ b","not elem_in_difference(a, b, x) or x ∈ a","x ∉ b != x ∈ b","x ∈ Set.new[K](elem_in_difference[K](a, b)) = elem_in_difference(a, b, x)","x ∉ b or x ∈ b","x ∈ Set.new[K](elem_in_difference[K](a, b))","elem_in_difference(a, b, x)","x ∈ a","not x ∉ b","not x ∈ b","x ∈ b"]}
{"goal":"x ∈ a ∖ b implies x ∈ a ∩ b.c","proof":["not x ∈ a or not x ∈ b.c or x ∈ a ∩ b.c","not x ∈ b.c","x ∈ b.c = x ∉ b"]}
{"goal":"x ∈ a ∖ b = x ∈ a ∩ b.c","proof":["x ∈ a ∩ b.c or x ∈ a ∖ b","not x ∈ a ∩ b.c or not x ∈ a ∖ b","not x ∈ a ∖ b","x ∈ a ∩ b.c","not x ∈ a or elem_in_difference(a, b, x) or x ∈ b","not x ∈ a ∩ b.c or x ∈ b.c","not x ∈ a ∩ b.c or x ∈ a","Set.new[K](elem_in_difference[K](a, b)) = a ∖ b","x ∈ b.c = x ∉ b","x ∈ a","x ∉ b != x ∈ b","x ∈ Set.new[K](elem_in_difference[K](a, b)) = elem_in_difference(a, b, x)","x ∈ b.c","x ∉ b","not x ∉ b or not x ∈ b","not x ∈ Set.new[K](elem_in_difference[K](a, b))","not elem_in_difference(a, b, x)","not x ∈ b","x ∈ b"]}
{"goal":"difference_is_intersection_with_compl","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c = s0(a ∩ b.c, a ∖ b) ∈ a ∖ b","not s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c or not s0(a ∩ b.c, a ∖ b) ∈ a ∖ b or set_eq_prop[K](a ∩ b.c, a ∖ b)","s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c or s0(a ∩ b.c, a ∖ b) ∈ a ∖ b or set_eq_prop[K](a ∩ b.c, a ∖ b)","not set_eq_prop[K](a ∩ b.c, a ∖ b) or a ∩ b.c = a ∖ b","not set_eq_prop[K](a ∩ b.c, a ∖ b)","s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c != s0(a ∩ b.c, a ∖ b) ∈ a ∖ b or s0(a ∩ b.c, a ∖ b) ∈ a ∖ b or set_eq_prop[K](a ∩ b.c, a ∖ b)","s0(a ∩ b.c, a ∖ b) ∈ a ∖ b","not s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c","s0(a ∩ b.c, a ∖ b) ∈ a ∩ b.c"]}
{"goal":"elem_in_union(a1, a2, x) implies elem_in_union(a2, a1, x)","proof":["not elem_in_union(a1, a2, x) or x ∈ a1 or x ∈ a2","not x ∈ a1 or elem_in_union(a2, a1, x)","not x ∈ a1","x ∈ a2","not x ∈ a2 or elem_in_union(a2, a1, x)"]}
{"goal":"elem_in_union(a1, a2, x) = elem_in_union(a2, a1, x)","proof":["elem_in_union(a2, a1, x) or elem_in_union(a1, a2, x)","elem_in_union(a2, a1, x)","not elem_in_union(a1, a2, x)","not elem_in_union(a2, a1, x) or x ∈ a2 or x ∈ a1","not x ∈ a2 or elem_in_union(a1, a2, x)","not x ∈ a1 or elem_in_union(a1, a2, x)","not x ∈ a1","not x ∈ a2","x ∈ a2"]}
{"goal":"elem_in_union[K](a1, a2) = elem_in_union[K](a2, a1)","proof":["let s0: K satisfy { elem_in_union(a2, a1, s0) != elem_in_union(a1, a2, s0) }","elem_in_union(a2, a1, s0) = elem_in_union(a1, a2, s0)"]}
{"goal":"union_comm","proof":["Set.new[K](elem_in_union[K](a1, a2)) = a1 ∪ a2","Set.new[K](elem_in_union[K](a2, a1)) = a2 ∪ a1"]}
{"goal":"elem_in_intersection(a1, a2, x) implies elem_in_intersection(a2, a1, x)","proof":["not x ∈ a2 or not x ∈ a1 or elem_in_intersection(a2, a1, x)","not elem_in_intersection(a1, a2, x) or x ∈ a2","not elem_in_intersection(a1, a2, x) or x ∈ a1","not x ∈ a2 or not x ∈ a1","x ∈ a1","x ∈ a2","not x ∈ a2"]}
{"goal":"elem_in_intersection(a1, a2, x) = elem_in_intersection(a2, a1, x)","proof":["elem_in_intersection(a2, a1, x) or elem_in_intersection(a1, a2, x)","elem_in_intersection(a2, a1, x)","not elem_in_intersection(a1, a2, x)","not x ∈ a1 or not x ∈ a2 or elem_in_intersection(a1, a2, x)","not elem_in_intersection(a2, a1, x) or x ∈ a1","not elem_in_intersection(a2, a1, x) or x ∈ a2","x ∈ a2","x ∈ a1","not x ∈ a1"]}
{"goal":"elem_in_intersection[K](a1, a2) = elem_in_intersection[K](a2, a1)","proof":["let s0: K satisfy { elem_in_intersection(a2, a1, s0) != elem_in_intersection(a1, a2, s0) }","elem_in_intersection(a2, a1, s0) = elem_in_intersection(a1, a2, s0)"]}
{"goal":"intersection_comm","proof":["Set.new[K](elem_in_intersection[K](a1, a2)) = a1 ∩ a2","Set.new[K](elem_in_intersection[K](a2, a1)) = a2 ∩ a1"]}
{"goal":"x ∉ a1 ∪ a2 implies x ∉ a1 and x ∉ a2","proof":["not x ∈ a2 or x ∈ a1 ∪ a2","not x ∈ a1 or x ∈ a1 ∪ a2","x ∉ a1 ∪ a2 != x ∈ a1 ∪ a2","x ∉ a2 != x ∈ a2","x ∉ a1 != x ∈ a1","x ∉ a1 or x ∈ a1","x ∉ a2 or x ∈ a2","not x ∉ a1 ∪ a2 or not x ∈ a1 ∪ a2","not x ∈ a1 ∪ a2","not x ∈ a1","not x ∈ a2","x ∉ a2","x ∉ a1","not x ∉ a1"]}
{"goal":"x ∈ (a1 ∪ a2).c implies x ∈ a1.c ∩ a2.c","proof":["not x ∈ a1.c or not x ∈ a2.c or x ∈ a1.c ∩ a2.c","x ∈ (a1 ∪ a2).c = x ∉ a1 ∪ a2","x ∈ a1.c = x ∉ a1","x ∉ a1 ∪ a2","x ∉ a1","x ∉ a2","x ∈ a2.c = x ∉ a2","not x ∈ a2.c or not x ∈ a1.c","x ∈ a2.c","x ∈ a1.c","not x ∈ a1.c"]}
{"goal":"x ∈ (a1 ∪ a2).c = x ∈ a1.c ∩ a2.c","proof":["x ∈ a1.c ∩ a2.c or x ∈ (a1 ∪ a2).c","not x ∈ a1.c ∩ a2.c or not x ∈ (a1 ∪ a2).c","not x ∈ (a1 ∪ a2).c","x ∈ a1.c ∩ a2.c","not x ∈ a1 ∪ a2 or x ∈ a1 or x ∈ a2","not x ∈ a1.c ∩ a2.c or x ∈ a1.c","a1.c ∩ a2.c = a1.c ∖ a2","x ∈ a1.c ∖ a2","Set.new[K](elem_in_difference[K](a1.c, a2)) = a1.c ∖ a2","not elem_in_difference(a1.c, a2, x) or not x ∈ a2","x ∈ (a1 ∪ a2).c = x ∉ a1 ∪ a2","not x ∉ a1 ∪ a2","x ∈ a1.c = x ∉ a1","x ∉ a1 ∪ a2 != x ∈ a1 ∪ a2","x ∉ a1 != x ∈ a1","x ∈ Set.new[K](elem_in_difference[K](a1.c, a2)) = elem_in_difference(a1.c, a2, x)","x ∈ a1.c","x ∉ a1","not x ∉ a1 or not x ∈ a1","x ∉ a1 ∪ a2 or x ∈ a1 ∪ a2","x ∈ a1 ∪ a2","x ∈ Set.new[K](elem_in_difference[K](a1.c, a2))","elem_in_difference(a1.c, a2, x)","not x ∈ a2","not x ∈ a1","x ∈ a1"]}
{"goal":"union_intersection_compl_dual","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c = s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c","not s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c or not s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c or set_eq_prop[K](a1.c ∩ a2.c, (a1 ∪ a2).c)","s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c or s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c or set_eq_prop[K](a1.c ∩ a2.c, (a1 ∪ a2).c)","not set_eq_prop[K](a1.c ∩ a2.c, (a1 ∪ a2).c) or a1.c ∩ a2.c = (a1 ∪ a2).c","not set_eq_prop[K](a1.c ∩ a2.c, (a1 ∪ a2).c)","s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c != s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c or s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c or set_eq_prop[K](a1.c ∩ a2.c, (a1 ∪ a2).c)","s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ (a1 ∪ a2).c","not s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c","s0(a1.c ∩ a2.c, (a1 ∪ a2).c) ∈ a1.c ∩ a2.c"]}
{"goal":"a1 ⊆ a1 ∪ a2","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a1, a1 ∪ a2) ∈ a1 ∪ a2 or a1 ⊆ a1 ∪ a2","s0(a1, a1 ∪ a2) ∈ a1 or a1 ⊆ a1 ∪ a2","not s0(a1, a1 ∪ a2) ∈ a1 or s0(a1, a1 ∪ a2) ∈ a1 ∪ a2","s0(a1, a1 ∪ a2) ∈ a1","not s0(a1, a1 ∪ a2) ∈ a1 ∪ a2"]}
{"goal":"a2 ⊆ a1 ∪ a2","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a2, a1 ∪ a2) ∈ a1 ∪ a2 or a2 ⊆ a1 ∪ a2","s0(a2, a1 ∪ a2) ∈ a2 or a2 ⊆ a1 ∪ a2","not s0(a2, a1 ∪ a2) ∈ a2 or s0(a2, a1 ∪ a2) ∈ a1 ∪ a2","s0(a2, a1 ∪ a2) ∈ a2","not s0(a2, a1 ∪ a2) ∈ a1 ∪ a2"]}
{"goal":"set_in_union","proof":["not a1 ⊆ a1 ∪ a2"]}
{"goal":"subset_union_is_subset","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(sub_1 ∪ sub_2, a) ∈ sub_1 ∪ sub_2 or s0(sub_1 ∪ sub_2, a) ∈ sub_1 or s0(sub_1 ∪ sub_2, a) ∈ sub_2","not sub_1 ⊆ a or not s0(sub_1 ∪ sub_2, a) ∈ sub_1 or s0(sub_1 ∪ sub_2, a) ∈ a","not sub_2 ⊆ a or not s0(sub_1 ∪ sub_2, a) ∈ sub_2 or s0(sub_1 ∪ sub_2, a) ∈ a","not s0(sub_1 ∪ sub_2, a) ∈ a or sub_1 ∪ sub_2 ⊆ a","s0(sub_1 ∪ sub_2, a) ∈ sub_1 ∪ sub_2 or sub_1 ∪ sub_2 ⊆ a","not s0(sub_1 ∪ sub_2, a) ∈ a","s0(sub_1 ∪ sub_2, a) ∈ sub_1 ∪ sub_2","not s0(sub_1 ∪ sub_2, a) ∈ sub_2 or s0(sub_1 ∪ sub_2, a) ∈ a","not s0(sub_1 ∪ sub_2, a) ∈ sub_1 or s0(sub_1 ∪ sub_2, a) ∈ a","not s0(sub_1 ∪ sub_2, a) ∈ sub_1","not s0(sub_1 ∪ sub_2, a) ∈ sub_2","s0(sub_1 ∪ sub_2, a) ∈ sub_2"]}
{"goal":"a1 ∩ a2 ⊆ a1","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a1 ∩ a2, a1) ∈ a1 or a1 ∩ a2 ⊆ a1","s0(a1 ∩ a2, a1) ∈ a1 ∩ a2 or a1 ∩ a2 ⊆ a1","not s0(a1 ∩ a2, a1) ∈ a1 ∩ a2 or s0(a1 ∩ a2, a1) ∈ a1","not s0(a1 ∩ a2, a1) ∈ a1","s0(a1 ∩ a2, a1) ∈ a1 ∩ a2"]}
{"goal":"a1 ∩ a2 ⊆ a2","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a1 ∩ a2, a2) ∈ a2 or a1 ∩ a2 ⊆ a2","s0(a1 ∩ a2, a2) ∈ a1 ∩ a2 or a1 ∩ a2 ⊆ a2","not s0(a1 ∩ a2, a2) ∈ a1 ∩ a2 or s0(a1 ∩ a2, a2) ∈ a2","not s0(a1 ∩ a2, a2) ∈ a2","s0(a1 ∩ a2, a2) ∈ a1 ∩ a2"]}
{"goal":"set_contains_intersection","proof":["not a1 ∩ a2 ⊆ a1"]}
{"goal":"supset_intersection_is_supset","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊇ x1 or not x2 ∈ x1 or x2 ∈ x0 } and forall(x3: Set[K], x4: Set[K]) { s0(x4, x3) ∈ x3 or x4 ⊇ x3 } and forall(x5: Set[K], x6: Set[K]) { not s0(x5, x6) ∈ x5 or x5 ⊇ x6 } }","not s0(sup_1 ∩ sup_2, a) ∈ sup_1 or not s0(sup_1 ∩ sup_2, a) ∈ sup_2 or s0(sup_1 ∩ sup_2, a) ∈ sup_1 ∩ sup_2","not sup_1 ⊇ a or not s0(sup_1 ∩ sup_2, a) ∈ a or s0(sup_1 ∩ sup_2, a) ∈ sup_1","not sup_2 ⊇ a or not s0(sup_1 ∩ sup_2, a) ∈ a or s0(sup_1 ∩ sup_2, a) ∈ sup_2","not s0(sup_1 ∩ sup_2, a) ∈ sup_1 ∩ sup_2 or sup_1 ∩ sup_2 ⊇ a","s0(sup_1 ∩ sup_2, a) ∈ a or sup_1 ∩ sup_2 ⊇ a","s0(sup_1 ∩ sup_2, a) ∈ a","not s0(sup_1 ∩ sup_2, a) ∈ sup_1 ∩ sup_2","not s0(sup_1 ∩ sup_2, a) ∈ a or s0(sup_1 ∩ sup_2, a) ∈ sup_2","not s0(sup_1 ∩ sup_2, a) ∈ a or s0(sup_1 ∩ sup_2, a) ∈ sup_1","s0(sup_1 ∩ sup_2, a) ∈ sup_1","s0(sup_1 ∩ sup_2, a) ∈ sup_2","not s0(sup_1 ∩ sup_2, a) ∈ sup_2"]}
{"goal":"a ∖ b ⊆ a ∪ b","proof":["not a ∖ b ⊆ a or not a ⊆ a ∪ b or a ∖ b ⊆ a ∪ b","a ∩ b.c = a ∖ b","a ⊆ a ∪ b","a ∩ b.c ⊆ a","not a ⊆ a ∪ b or not a ∖ b ⊆ a","not a ∖ b ⊆ a"]}
{"goal":"b ∖ a ⊆ a ∪ b","proof":["not b ∖ a ⊆ b or not b ⊆ a ∪ b or b ∖ a ⊆ a ∪ b","b ∩ a.c = b ∖ a","b ⊆ a ∪ b","b ∩ a.c ⊆ b","not b ⊆ a ∪ b or not b ∖ a ⊆ b","not b ∖ a ⊆ b"]}
{"goal":"a ∖ b ⊆ b.c","proof":["a ∩ b.c = a ∖ b","a ∩ b.c ⊆ b.c"]}
{"goal":"a ∖ b ⊆ a.c ∪ b.c","proof":["not a ∖ b ⊆ b.c or not b.c ⊆ a.c ∪ b.c or a ∖ b ⊆ a.c ∪ b.c","b.c ⊆ a.c ∪ b.c","not b.c ⊆ a.c ∪ b.c or not a ∖ b ⊆ b.c"]}
{"goal":"a ∖ b ⊆ (a ∩ b).c","proof":["a.c.c ∩ b.c.c = (a.c ∪ b.c).c","(a ∩ b).c ⊇ a ∖ b = a ∖ b ⊆ (a ∩ b).c","a.c ∪ b.c ⊇ a ∖ b = a ∖ b ⊆ a.c ∪ b.c","(a.c ∪ b.c).c.c = a.c ∪ b.c","a.c.c = a","b.c.c = b"]}
{"goal":"b ∖ a ⊆ (a ∩ b).c","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(b ∖ a, (a ∩ b).c) ∈ (a ∩ b).c or b ∖ a ⊆ (a ∩ b).c","s0(b ∖ a, (a ∩ b).c) ∈ b ∖ a or b ∖ a ⊆ (a ∩ b).c","not s0(b ∖ a, (a ∩ b).c) ∈ a ∩ b or s0(b ∖ a, (a ∩ b).c) ∈ a","Set.new[K](elem_in_difference[K](b, a)) = b ∖ a","not elem_in_difference(b, a, s0(b ∖ a, (a ∩ b).c)) or not s0(b ∖ a, (a ∩ b).c) ∈ a","s0(b ∖ a, (a ∩ b).c) ∈ (a ∩ b).c = s0(b ∖ a, (a ∩ b).c) ∉ a ∩ b","s0(b ∖ a, (a ∩ b).c) ∉ a ∩ b != s0(b ∖ a, (a ∩ b).c) ∈ a ∩ b","s0(b ∖ a, (a ∩ b).c) ∈ Set.new[K](elem_in_difference[K](b, a)) = elem_in_difference(b, a, s0(b ∖ a, (a ∩ b).c))","s0(b ∖ a, (a ∩ b).c) ∉ a ∩ b or s0(b ∖ a, (a ∩ b).c) ∈ a ∩ b","s0(b ∖ a, (a ∩ b).c) ∈ b ∖ a","not s0(b ∖ a, (a ∩ b).c) ∈ (a ∩ b).c","not s0(b ∖ a, (a ∩ b).c) ∉ a ∩ b","s0(b ∖ a, (a ∩ b).c) ∈ Set.new[K](elem_in_difference[K](b, a))","elem_in_difference(b, a, s0(b ∖ a, (a ∩ b).c))","s0(b ∖ a, (a ∩ b).c) ∈ a ∩ b","not s0(b ∖ a, (a ∩ b).c) ∈ a","s0(b ∖ a, (a ∩ b).c) ∈ a"]}
{"goal":"a ∖ b ∪ (b ∖ a) ⊆ (a ∪ b) ∩ (a ∩ b).c","proof":["not b ∖ a ⊆ (a ∩ b).c or not a ∖ b ⊆ (a ∩ b).c or b ∖ a ∪ (a ∖ b) ⊆ (a ∩ b).c","not b ∖ a ⊆ a ∪ b or not a ∖ b ⊆ a ∪ b or b ∖ a ∪ (a ∖ b) ⊆ a ∪ b","not a ∪ b ⊇ sym_difference[K](b, a) or not (a ∩ b).c ⊇ sym_difference[K](b, a) or (a ∪ b) ∩ (a ∩ b).c ⊇ sym_difference[K](b, a)","b ∖ a ∪ (a ∖ b) = sym_difference[K](b, a)","(a ∩ b).c ⊇ sym_difference[K](b, a) = sym_difference[K](b, a) ⊆ (a ∩ b).c","(a ∪ b) ∩ (a ∩ b).c ⊇ sym_difference[K](b, a) = sym_difference[K](b, a) ⊆ (a ∪ b) ∩ (a ∩ b).c","a ∪ b ⊇ sym_difference[K](b, a) = sym_difference[K](b, a) ⊆ a ∪ b","b ∖ a ∪ (a ∖ b) = a ∖ b ∪ (b ∖ a)","not sym_difference[K](b, a) ⊆ (a ∩ b).c or (a ∩ b).c ⊇ sym_difference[K](b, a)","not b ∖ a ∪ (a ∖ b) ⊆ (a ∪ b) ∩ (a ∩ b).c","not sym_difference[K](b, a) ⊆ (a ∪ b) ∩ (a ∩ b).c","not a ∖ b ⊆ a ∪ b or b ∖ a ∪ (a ∖ b) ⊆ a ∪ b","not a ∖ b ⊆ (a ∩ b).c or b ∖ a ∪ (a ∖ b) ⊆ (a ∩ b).c","b ∖ a ∪ (a ∖ b) ⊆ a ∪ b","sym_difference[K](b, a) ⊆ a ∪ b","b ∖ a ∪ (a ∖ b) ⊆ (a ∩ b).c","sym_difference[K](b, a) ⊆ (a ∩ b).c","not (a ∪ b) ∩ (a ∩ b).c ⊇ sym_difference[K](b, a)","a ∪ b ⊇ sym_difference[K](b, a)","(a ∩ b).c ⊇ sym_difference[K](b, a)","not (a ∩ b).c ⊇ sym_difference[K](b, a)"]}
{"goal":"x ∈ a ∪ b ∖ a ∩ b implies x ∈ a ∖ b ∪ (b ∖ a)","proof":["not x ∈ a or not x ∈ b or x ∈ a ∩ b","not x ∈ a or elem_in_difference(a, b, x) or x ∈ b","not x ∈ Set.new[K](elem_in_difference[K](a, b)) or x ∈ Set.new[K](elem_in_difference[K](a, b)) ∪ (b ∖ a)","Set.new[K](elem_in_difference[K](a ∪ b, a ∩ b)) = a ∪ b ∖ a ∩ b","Set.new[K](elem_in_difference[K](a, b)) = a ∖ b","not elem_in_difference(a ∪ b, a ∩ b, x) or not x ∈ a ∩ b","x ∈ Set.new[K](elem_in_difference[K](a ∪ b, a ∩ b)) = elem_in_difference(a ∪ b, a ∩ b, x)","x ∈ Set.new[K](elem_in_difference[K](a, b)) = elem_in_difference(a, b, x)","not x ∈ Set.new[K](elem_in_difference[K](a, b)) ∪ (b ∖ a)","not x ∈ b or x ∈ a ∩ b","x ∈ Set.new[K](elem_in_difference[K](a ∪ b, a ∩ b))","elem_in_difference(a ∪ b, a ∩ b, x)","not x ∈ Set.new[K](elem_in_difference[K](a, b))","not elem_in_difference(a, b, x)","x ∈ b","not x ∈ a ∩ b","x ∈ a ∩ b"]}
{"goal":"x ∈ a ∪ b ∖ a ∩ b implies x ∈ a ∖ b ∪ (b ∖ a)","proof":["not x ∈ a","not x ∈ a ∪ b or x ∈ a or x ∈ b","not x ∈ b or elem_in_difference(b, a, x) or x ∈ a","not x ∈ (a ∪ b) ∩ (a ∩ b).c or x ∈ a ∪ b","not x ∈ Set.new[K](elem_in_difference[K](b, a)) or x ∈ a ∖ b ∪ Set.new[K](elem_in_difference[K](b, a))","(a ∪ b) ∩ (a ∩ b).c = a ∪ b ∖ a ∩ b","Set.new[K](elem_in_difference[K](b, a)) = b ∖ a","x ∈ Set.new[K](elem_in_difference[K](b, a)) = elem_in_difference(b, a, x)","not x ∈ b or elem_in_difference(b, a, x)","not x ∈ a ∖ b ∪ Set.new[K](elem_in_difference[K](b, a))","x ∈ (a ∪ b) ∩ (a ∩ b).c","not x ∈ Set.new[K](elem_in_difference[K](b, a))","not elem_in_difference(b, a, x)","x ∈ a ∪ b","not x ∈ b","x ∈ b"]}
{"goal":"a ∪ b ∖ a ∩ b ⊆ a ∖ b ∪ (b ∖ a)","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∪ b ∖ a ∩ b or s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∖ b ∪ (b ∖ a)","not s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∖ b ∪ (b ∖ a) or a ∪ b ∖ a ∩ b ⊆ a ∖ b ∪ (b ∖ a)","s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∪ b ∖ a ∩ b or a ∪ b ∖ a ∩ b ⊆ a ∖ b ∪ (b ∖ a)","s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∪ b ∖ a ∩ b","not s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∖ b ∪ (b ∖ a)","s0(a ∪ b ∖ a ∩ b, a ∖ b ∪ (b ∖ a)) ∈ a ∖ b ∪ (b ∖ a)"]}
{"goal":"sym_difference_another_rep","proof":["not a ∪ b ∖ a ∩ b ⊇ a ∖ b ∪ (b ∖ a) or not a ∪ b ∖ a ∩ b ⊆ a ∖ b ∪ (b ∖ a) or a ∪ b ∖ a ∩ b = a ∖ b ∪ (b ∖ a)","(a ∪ b) ∩ (a ∩ b).c = a ∪ b ∖ a ∩ b","a ∪ b ∖ a ∩ b ⊇ a ∖ b ∪ (b ∖ a) = a ∖ b ∪ (b ∖ a) ⊆ a ∪ b ∖ a ∩ b","a ∖ b ∪ (b ∖ a) ⊆ a ∪ b ∖ a ∩ b","not a ∪ b ∖ a ∩ b ⊇ a ∖ b ∪ (b ∖ a)","a ∪ b ∖ a ∩ b ⊇ a ∖ b ∪ (b ∖ a)"]}
{"goal":"a1 ⊆ u1","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a1, u1) ∈ a1 or s0(a1, u1) ∈ a1 ∪ a2","not s0(a1, u1) ∈ a1 ∪ a2 or s0(a1, u1) ∈ a1 ∪ a2 ∪ a3","not s0(a1, u1) ∈ u1 or a1 ⊆ u1","not s0(a1, u1) ∈ u1","s0(a1, u1) ∈ a1 or a1 ⊆ u1","s0(a1, u1) ∈ a1","s0(a1, u1) ∈ a1 ∪ a2","not s0(a1, u1) ∈ a1 ∪ a2 ∪ a3"]}
{"goal":"a2 ⊆ u1","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a2, u1) ∈ a2 or s0(a2, u1) ∈ a1 ∪ a2","not s0(a2, u1) ∈ a1 ∪ a2 or s0(a2, u1) ∈ a1 ∪ a2 ∪ a3","not s0(a2, u1) ∈ u1 or a2 ⊆ u1","not s0(a2, u1) ∈ u1","s0(a2, u1) ∈ a2 or a2 ⊆ u1","s0(a2, u1) ∈ a2","s0(a2, u1) ∈ a1 ∪ a2","not s0(a2, u1) ∈ a1 ∪ a2 ∪ a3"]}
{"goal":"a3 ⊆ u1","proof":["a3 ⊆ a1 ∪ a2 ∪ a3"]}
{"goal":"u2 ⊆ u1","proof":["not a1 ⊆ u1 or not a2 ∪ a3 ⊆ u1 or a1 ∪ (a2 ∪ a3) ⊆ u1","not a2 ⊆ u1 or not a3 ⊆ u1 or a2 ∪ a3 ⊆ u1","not a1 ∪ (a2 ∪ a3) ⊆ u1","not a2 ⊆ u1 or a2 ∪ a3 ⊆ u1","not a2 ∪ a3 ⊆ u1","a2 ∪ a3 ⊆ u1"]}
{"goal":"a1 ⊆ u2","proof":["a1 ⊆ a1 ∪ (a2 ∪ a3)"]}
{"goal":"a2 ⊆ u2","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a2, u2) ∈ a2 ∪ a3 or s0(a2, u2) ∈ a1 ∪ (a2 ∪ a3)","not s0(a2, u2) ∈ a2 or s0(a2, u2) ∈ a2 ∪ a3","not s0(a2, u2) ∈ u2 or a2 ⊆ u2","not s0(a2, u2) ∈ u2","s0(a2, u2) ∈ a2 or a2 ⊆ u2","s0(a2, u2) ∈ a2","s0(a2, u2) ∈ a2 ∪ a3","not s0(a2, u2) ∈ a1 ∪ (a2 ∪ a3)"]}
{"goal":"a3 ⊆ u2","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0(a3, u2) ∈ a2 ∪ a3 or s0(a3, u2) ∈ a1 ∪ (a2 ∪ a3)","not s0(a3, u2) ∈ a3 or s0(a3, u2) ∈ a2 ∪ a3","not s0(a3, u2) ∈ u2 or a3 ⊆ u2","not s0(a3, u2) ∈ u2","s0(a3, u2) ∈ a3 or a3 ⊆ u2","s0(a3, u2) ∈ a3","s0(a3, u2) ∈ a2 ∪ a3","not s0(a3, u2) ∈ a1 ∪ (a2 ∪ a3)"]}
{"goal":"u1 ⊆ u2","proof":["not a1 ∪ a2 ⊆ u2 or not a3 ⊆ u2 or a1 ∪ a2 ∪ a3 ⊆ u2","not a1 ⊆ u2 or not a2 ⊆ u2 or a1 ∪ a2 ⊆ u2","not a1 ∪ a2 ∪ a3 ⊆ u2","not a1 ⊆ u2 or a1 ∪ a2 ⊆ u2","not a1 ∪ a2 ⊆ u2","a1 ∪ a2 ⊆ u2"]}
{"goal":"union_associative","proof":["a1 ∪ (a2 ∪ a3) != u1","u2 != u1","not u1 ⊇ u2 or not u1 ⊆ u2 or u2 = u1","not u1 ⊇ u2","u1 ⊇ u2 = u2 ⊆ u1"]}
{"goal":"(a1.c ∪ a2.c ∪ a3.c).c = (a1.c ∪ (a2.c ∪ a3.c)).c","proof":["a1.c ∪ (a2.c ∪ a3.c) != a1.c ∪ a2.c ∪ a3.c","a1.c ∪ (a2.c ∪ a3.c) = a1.c ∪ a2.c ∪ a3.c"]}
{"goal":"intersection_associative","proof":["a1.c ∪ (a2.c ∪ a3.c) = a1.c ∪ a2.c ∪ a3.c","(a2.c ∪ a3.c).c ∩ a1.c.c = (a2.c ∪ a3.c ∪ a1.c).c","a1.c.c ∩ a2.c.c = (a1.c ∪ a2.c).c","a2.c.c ∩ a3.c.c = (a2.c ∪ a3.c).c","a3.c.c ∩ (a1.c ∪ a2.c).c = (a3.c ∪ (a1.c ∪ a2.c)).c","a1 ∩ a2 ∩ a3 = a3 ∩ (a1 ∩ a2)","a2 ∩ a3 ∩ a1 = a1 ∩ (a2 ∩ a3)","a1.c ∪ (a2.c ∪ a3.c) = a2.c ∪ a3.c ∪ a1.c","a3.c ∪ (a1.c ∪ a2.c) = a1.c ∪ a2.c ∪ a3.c","a1.c.c = a1","a2.c.c = a2","a3.c.c = a3"]}
{"goal":"union_idemp","proof":["not a ⊆ a or not a ⊆ a or a ∪ a ⊆ a","not a ⊇ a ∪ a or not a ⊆ a ∪ a or a ∪ a = a","a ⊇ a ∪ a = a ∪ a ⊆ a","a ⊆ a ∪ a","not a ⊇ a ∪ a","not a ∪ a ⊆ a","a ⊆ a"]}
{"goal":"intersection_idemp","proof":["not a ⊇ a or not a ⊇ a or a ∩ a ⊇ a","not a ∩ a ⊇ a or not a ∩ a ⊆ a or a ∩ a = a","a ∩ a ⊆ a","not a ∩ a ⊇ a","a != a or a ⊇ a","a ⊇ a"]}
{"goal":"union_subset_is_self","proof":["not sub ⊆ a or not a ⊆ a or sub ∪ a ⊆ a","not a ⊇ sub ∪ a or not a ⊆ sub ∪ a or sub ∪ a = a","a ⊇ sub ∪ a = sub ∪ a ⊆ a","a ⊆ sub ∪ a","not a ⊇ sub ∪ a","not sub ∪ a ⊆ a","a ⊆ a"]}
{"goal":"intersection_subset_is_self","proof":["not sup ⊇ a or not a ⊇ a or sup ∩ a ⊇ a","not sup ∩ a ⊇ a or not sup ∩ a ⊆ a or sup ∩ a = a","sup ∩ a ⊆ a","not sup ∩ a ⊇ a","a != a or a ⊇ a","a ⊇ a"]}
{"goal":"union_empty_is_self","proof":["not empty[K] ⊆ a or empty[K] ∪ a = a","empty[K] ∪ a = a ∪ empty[K]","empty[K] ∪ a != a","empty[K] ⊆ a"]}
{"goal":"union_universal_is_universal","proof":["not a ⊆ universe[K] or a ∪ universe[K] = universe[K]","not a ⊆ universe[K]","a ⊆ universe[K]"]}
{"goal":"intersection_universal_is_self","proof":["not universe[K] ⊇ a or universe[K] ∩ a = a","universe[K] ∩ a = a ∩ universe[K]","universe[K] ∩ a != a","universe[K] ⊇ a = a ⊆ universe[K]","a ⊆ universe[K]","not a ⊆ universe[K] or universe[K] ⊇ a","not universe[K] ⊇ a"]}
{"goal":"intersection_empty_is_empty","proof":["not s ⊇ empty[K] or s ∩ empty[K] = empty[K]","not s ⊇ empty[K]","s ⊇ empty[K] = empty[K] ⊆ s","not empty[K] ⊆ s","empty[K] ⊆ s ∪ empty[K]","s ∪ empty[K] = s"]}
{"goal":"bool_distributive","proof":["not x1","not x2","x2"]}
{"goal":"bool_distributive_dual","proof":["x1","x2","not x2"]}
{"goal":"a1 ∪ a2 ⊇ a1","proof":["a2 ∪ a1 ⊇ a1 = a1 ⊆ a2 ∪ a1","a2 ∪ a1 = a1 ∪ a2","not a2 ∪ a1 ⊇ a1","a1 ⊆ a2 ∪ a1"]}
{"goal":"a1 ∪ a2 ⊇ a2","proof":["a1 ∪ a2 ⊇ a2 = a2 ⊆ a1 ∪ a2","not a2 ⊆ a1 ∪ a2","a2 ⊆ a1 ∪ a2"]}
{"goal":"(a1 ∪ a2) ∩ b ⊇ a1 ∩ b","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊇ x1 or not x2 ∈ x1 or x2 ∈ x0 } and forall(x3: Set[K], x4: Set[K]) { s0(x4, x3) ∈ x3 or x4 ⊇ x3 } and forall(x5: Set[K], x6: Set[K]) { not s0(x5, x6) ∈ x5 or x5 ⊇ x6 } }","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ b or not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∪ a2 or s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ b ∩ (a1 ∪ a2)","not a1 ∪ a2 ⊇ a1 or not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 or s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ (a1 ∪ a2) ∩ b or (a1 ∪ a2) ∩ b ⊇ a1 ∩ b","s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∩ b or (a1 ∪ a2) ∩ b ⊇ a1 ∩ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∩ b or s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∩ b or s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1","(a1 ∪ a2) ∩ b = b ∩ (a1 ∪ a2)","s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∩ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ (a1 ∪ a2) ∩ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 or s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ b ∩ (a1 ∪ a2)","s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1","s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ b","s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a1 ∩ b) ∈ a1 ∪ a2"]}
{"goal":"(a1 ∪ a2) ∩ b ⊇ a2 ∩ b","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊇ x1 or not x2 ∈ x1 or x2 ∈ x0 } and forall(x3: Set[K], x4: Set[K]) { s0(x4, x3) ∈ x3 or x4 ⊇ x3 } and forall(x5: Set[K], x6: Set[K]) { not s0(x5, x6) ∈ x5 or x5 ⊇ x6 } }","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ b or not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a1 ∪ a2 or s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ b ∩ (a1 ∪ a2)","not a1 ∪ a2 ⊇ a2 or not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 or s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ (a1 ∪ a2) ∩ b or (a1 ∪ a2) ∩ b ⊇ a2 ∩ b","s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 ∩ b or (a1 ∪ a2) ∩ b ⊇ a2 ∩ b","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 ∩ b or s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ b","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 ∩ b or s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2","(a1 ∪ a2) ∩ b = b ∩ (a1 ∪ a2)","s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 ∩ b","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ (a1 ∪ a2) ∩ b","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2 or s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ b ∩ (a1 ∪ a2)","s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a2","s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ b","s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a1 ∪ a2","not s0((a1 ∪ a2) ∩ b, a2 ∩ b) ∈ a1 ∪ a2"]}
{"goal":"(a1 ∪ a2) ∩ b ⊇ a1 ∩ b ∪ a2 ∩ b","proof":["not a1 ∩ b ⊆ (a1 ∪ a2) ∩ b or not a2 ∩ b ⊆ (a1 ∪ a2) ∩ b or a1 ∩ b ∪ a2 ∩ b ⊆ (a1 ∪ a2) ∩ b","(a1 ∪ a2) ∩ b ⊇ a1 ∩ b = a1 ∩ b ⊆ (a1 ∪ a2) ∩ b","(a1 ∪ a2) ∩ b ⊇ a1 ∩ b ∪ a2 ∩ b = a1 ∩ b ∪ a2 ∩ b ⊆ (a1 ∪ a2) ∩ b","(a1 ∪ a2) ∩ b ⊇ a2 ∩ b = a2 ∩ b ⊆ (a1 ∪ a2) ∩ b","not a1 ∩ b ∪ a2 ∩ b ⊆ (a1 ∪ a2) ∩ b","a2 ∩ b ⊆ (a1 ∪ a2) ∩ b","a1 ∩ b ⊆ (a1 ∪ a2) ∩ b","not a1 ∩ b ⊆ (a1 ∪ a2) ∩ b"]}
{"goal":"x ∈ a1 or x ∈ a2 and x ∈ b","proof":["not x ∈ a1 ∪ a2 or x ∈ a1 or x ∈ a2","not x ∈ (a1 ∪ a2) ∩ b or x ∈ b","not x ∈ (a1 ∪ a2) ∩ b or x ∈ a1 ∪ a2","x ∈ b","not x ∈ a1","not x ∈ a2","x ∈ a1 ∪ a2"]}
{"goal":"x ∈ a1 and x ∈ b or (x ∈ a2 and x ∈ b)","proof":["not x ∈ a1","not x ∈ a2"]}
{"goal":"x ∈ a1 ∩ b or x ∈ a2 ∩ b","proof":["not x ∈ a1 or not x ∈ b or x ∈ a1 ∩ b","not x ∈ a2 or not x ∈ b or x ∈ a2 ∩ b","not x ∈ a2","not x ∈ a1","x ∈ a1"]}
{"goal":"x ∈ a1 ∩ b ∪ a2 ∩ b","proof":["not x ∈ a2 ∩ b or x ∈ a1 ∩ b ∪ a2 ∩ b","not x ∈ a2 ∩ b","not x ∈ a1 ∩ b or x ∈ a1 ∩ b ∪ a2 ∩ b","x ∈ a1 ∩ b","not x ∈ a1 ∩ b"]}
{"goal":"(a1 ∪ a2) ∩ b ⊆ a1 ∩ b ∪ a2 ∩ b","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not x0 ⊆ x1 or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K]) { s0(x3, x4) ∈ x3 or x3 ⊆ x4 } and forall(x5: Set[K], x6: Set[K]) { not s0(x6, x5) ∈ x5 or x6 ⊆ x5 } }","not s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ (a1 ∪ a2) ∩ b or s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ a1 ∩ b ∪ a2 ∩ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ a1 ∩ b ∪ a2 ∩ b or (a1 ∪ a2) ∩ b ⊆ a1 ∩ b ∪ a2 ∩ b","s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ (a1 ∪ a2) ∩ b or (a1 ∪ a2) ∩ b ⊆ a1 ∩ b ∪ a2 ∩ b","s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ (a1 ∪ a2) ∩ b","not s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ a1 ∩ b ∪ a2 ∩ b","s0((a1 ∪ a2) ∩ b, a1 ∩ b ∪ a2 ∩ b) ∈ a1 ∩ b ∪ a2 ∩ b"]}
{"goal":"union_intersection_distributive","proof":["not (a1 ∪ a2) ∩ b ⊇ a1 ∩ b ∪ a2 ∩ b or not (a1 ∪ a2) ∩ b ⊆ a1 ∩ b ∪ a2 ∩ b or a1 ∩ b ∪ a2 ∩ b = (a1 ∪ a2) ∩ b"]}
{"goal":"((a1.c ∪ a2.c) ∩ b.c).c = (a1.c ∩ b.c ∪ a2.c ∩ b.c).c","proof":["a1.c ∩ b.c ∪ a2.c ∩ b.c != (a1.c ∪ a2.c) ∩ b.c","a1.c ∩ b.c ∪ a2.c ∩ b.c = (a1.c ∪ a2.c) ∩ b.c"]}
{"goal":"union_intersection_distributive_dual","proof":["(a1.c ∩ b.c).c ∩ (a2.c ∩ b.c).c = (a1.c ∩ b.c ∪ a2.c ∩ b.c).c","a1.c ∩ b.c = (a1 ∪ b).c","a1.c.c ∩ a2.c.c = (a1.c ∪ a2.c).c","a2.c ∩ b.c = (a2 ∪ b).c","b.c ∩ (a1 ∩ a2).c = (b ∪ a1 ∩ a2).c","b.c ∩ (a1.c ∪ a2.c) = (a1.c ∪ a2.c) ∩ b.c","a1 ∩ a2 ∪ b = b ∪ a1 ∩ a2","Set.new[K](((a1.c ∪ a2.c) ∩ b.c).not_contains) = ((a1.c ∪ a2.c) ∩ b.c).c","Set.new[K]((a1 ∩ a2 ∪ b).c.not_contains) = (a1 ∩ a2 ∪ b).c.c","(a1 ∪ b).c.c = a1 ∪ b","(a1.c ∪ a2.c).c.c = a1.c ∪ a2.c","(a2 ∪ b).c.c = a2 ∪ b","(b ∪ a1 ∩ a2).c.c = b ∪ a1 ∩ a2","a1.c.c = a1","a2.c.c = a2"]}
{"goal":"x ∉ union_index[I, K](f) implies forall(x0: I) { x ∉ f(x0) }","proof":["let s0: I satisfy { not x ∉ f(s0) }","not x ∈ f(s0) or or_index[I, K](f, x)","x ∉ union_index[I, K](f) != x ∈ union_index[I, K](f)","x ∉ f(s0) != x ∈ f(s0)","x ∈ Set.new[K](or_index[I, K](f)) = or_index[I, K](f, x)","Set.new[K](or_index[I, K](f)) = union_index[I, K](f)","not or_index[I, K](f, x) or x ∈ Set.new[K](or_index[I, K](f))","x ∉ f(s0) or x ∈ f(s0)","x ∈ f(s0)","not x ∉ union_index[I, K](f) or not x ∈ union_index[I, K](f)","not x ∈ union_index[I, K](f)","or_index[I, K](f, x)","not x ∈ Set.new[K](or_index[I, K](f))"]}
{"goal":"x ∈ union_index[I, K](f).c implies x ∈ intersection_index[I, K](index_compl[I, K](f))","proof":["let s0: (I -> Set[K], K) -> I satisfy { forall(x0: I -> Set[K], x1: K, x2: I) { not and_index[I, K](x0, x1) or x1 ∈ x0(x2) } and forall(x3: I -> Set[K], x4: K) { not x4 ∈ x3(s0(x3, x4)) or and_index[I, K](x3, x4) } }","not x ∉ union_index[I, K](f) or x ∉ f(s0(index_compl[I, K](f), x))","not x ∈ index_compl[I, K](f, s0(index_compl[I, K](f), x)) or and_index[I, K](index_compl[I, K](f), x)","x ∈ f(s0(index_compl[I, K](f), x)).c = x ∉ f(s0(index_compl[I, K](f), x))","x ∈ union_index[I, K](f).c = x ∉ union_index[I, K](f)","x ∉ union_index[I, K](f)","index_compl[I, K](f, s0(index_compl[I, K](f), x)) = f(s0(index_compl[I, K](f), x)).c","x ∈ Set.new[K](and_index[I, K](index_compl[I, K](f))) = and_index[I, K](index_compl[I, K](f), x)","x ∉ f(s0(index_compl[I, K](f), x))","Set.new[K](and_index[I, K](index_compl[I, K](f))) = intersection_index[I, K](index_compl[I, K](f))","not x ∈ Set.new[K](and_index[I, K](index_compl[I, K](f)))","not and_index[I, K](index_compl[I, K](f), x)","not x ∉ f(s0(index_compl[I, K](f), x)) or x ∈ f(s0(index_compl[I, K](f), x)).c","x ∈ f(s0(index_compl[I, K](f), x)).c","not x ∈ index_compl[I, K](f, s0(index_compl[I, K](f), x))"]}
{"goal":"forall(x0: I) { x ∉ f(x0) } implies x ∉ union_index[I, K](f)","proof":["let s0: (I -> Set[K], K) -> I satisfy { forall(x0: I -> Set[K], x1: K) { not or_index[I, K](x0, x1) or x1 ∈ x0(s0(x0, x1)) } and forall(x2: I -> Set[K], x3: I, x4: K) { not x4 ∈ x2(x3) or or_index[I, K](x2, x4) } }","x ∉ f(s0(f, x))","not or_index[I, K](f, x) or x ∈ f(s0(f, x))","x ∉ Set.new[K](or_index[I, K](f)) != x ∈ Set.new[K](or_index[I, K](f))","x ∉ f(s0(f, x)) != x ∈ f(s0(f, x))","x ∈ Set.new[K](or_index[I, K](f)) = or_index[I, K](f, x)","Set.new[K](or_index[I, K](f)) = union_index[I, K](f)","not x ∉ Set.new[K](or_index[I, K](f))","x ∉ Set.new[K](or_index[I, K](f)) or x ∈ Set.new[K](or_index[I, K](f))","not x ∉ f(s0(f, x)) or not x ∈ f(s0(f, x))","not x ∈ f(s0(f, x))","x ∈ Set.new[K](or_index[I, K](f))","not or_index[I, K](f, x)","or_index[I, K](f, x)"]}
{"goal":"x ∈ intersection_index[I, K](index_compl[I, K](f)) implies x ∈ union_index[I, K](f).c","proof":["let s0: I satisfy { not x ∉ f(s0) or x ∉ union_index[I, K](f) }","not and_index[I, K](index_compl[I, K](f), x) or x ∈ index_compl[I, K](f, s0)","x ∈ union_index[I, K](f).c = x ∉ union_index[I, K](f)","not x ∉ union_index[I, K](f)","not x ∉ f(s0)","x ∈ f(s0).c = x ∉ f(s0)","index_compl[I, K](f, s0) = f(s0).c","x ∈ Set.new[K](and_index[I, K](index_compl[I, K](f))) = and_index[I, K](index_compl[I, K](f), x)","Set.new[K](and_index[I, K](index_compl[I, K](f))) = intersection_index[I, K](index_compl[I, K](f))","not x ∈ f(s0).c","x ∈ Set.new[K](and_index[I, K](index_compl[I, K](f)))","and_index[I, K](index_compl[I, K](f), x)","not x ∈ index_compl[I, K](f, s0)","x ∈ index_compl[I, K](f, s0)"]}
{"goal":"x ∈ union_index[I, K](f).c = x ∈ intersection_index[I, K](index_compl[I, K](f))","proof":["x ∈ intersection_index[I, K](index_compl[I, K](f)) or x ∈ union_index[I, K](f).c","not x ∈ intersection_index[I, K](index_compl[I, K](f)) or not x ∈ union_index[I, K](f).c","x ∈ intersection_index[I, K](index_compl[I, K](f))","not x ∈ intersection_index[I, K](index_compl[I, K](f))"]}
{"goal":"union_intersection_index_compl_dual","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f)) = s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c","not s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f)) or not s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c or set_eq_prop[K](intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c)","s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f)) or s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c or set_eq_prop[K](intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c)","not set_eq_prop[K](intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) or intersection_index[I, K](index_compl[I, K](f)) = union_index[I, K](f).c","not set_eq_prop[K](intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c)","s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f)) != s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c or s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c or set_eq_prop[K](intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c)","s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ union_index[I, K](f).c","not s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f))","s0(intersection_index[I, K](index_compl[I, K](f)), union_index[I, K](f).c) ∈ intersection_index[I, K](index_compl[I, K](f))"]}
{"goal":"test_two","proof":["Two.first = Two.second"]}
{"goal":"x ∈ a1 implies exists(k0: Two) { x ∈ fn_two[K](a1, a2, k0) }","proof":["not x ∈ fn_two[K](a1, a2, Two.first)","Two.first != Two.first or fn_two[K](a1, a2, Two.first) = a1","fn_two[K](a1, a2, Two.first) = a1","x ∈ fn_two[K](a1, a2, Two.first)"]}
{"goal":"x ∈ a2 implies exists(k0: Two) { x ∈ fn_two[K](a1, a2, k0) }","proof":["not x ∈ fn_two[K](a1, a2, Two.second)","Two.second != Two.second or fn_two[K](a1, a2, Two.second) = a2","fn_two[K](a1, a2, Two.second) = a2","x ∈ fn_two[K](a1, a2, Two.second)"]}
{"goal":"Set.new[K](or_index[Two, K](fn_two[K](a1, a2))).contains(x)","proof":["let s0: Two satisfy { x ∈ fn_two[K](a1, a2, s0) }","not x ∈ fn_two[K](a1, a2, s0) or or_index[Two, K](fn_two[K](a1, a2), x)","x ∈ Set.new[K](or_index[Two, K](fn_two[K](a1, a2))) = or_index[Two, K](fn_two[K](a1, a2), x)","not or_index[Two, K](fn_two[K](a1, a2), x)","not x ∈ fn_two[K](a1, a2, s0)"]}
{"goal":"x ∈ union_index_of_two[K](a1, a2)","proof":["union_index[Two, K](fn_two[K](a1, a2)) = union_index_of_two[K](a1, a2)","not x ∈ union_index[Two, K](fn_two[K](a1, a2))","Set.new[K](or_index[Two, K](fn_two[K](a1, a2))) = union_index[Two, K](fn_two[K](a1, a2))"]}
{"goal":"x ∈ a1 ∪ a2 implies x ∈ union_index_of_two[K](a1, a2)","proof":["let s0: Two satisfy { not x ∈ a2 or x ∈ fn_two[K](a1, a2, s0) }","let s1: Two satisfy { not x ∈ a1 or x ∈ fn_two[K](a1, a2, s1) }","not x ∈ fn_two[K](a1, a2, s0) or x ∈ union_index_of_two[K](a1, a2)","not x ∈ fn_two[K](a1, a2, s1) or x ∈ union_index_of_two[K](a1, a2)","not x ∈ fn_two[K](a1, a2, s0)","not x ∈ fn_two[K](a1, a2, s1)","not x ∈ a1 ∪ a2 or x ∈ a1 or x ∈ a2"]}
{"goal":"Set.new[K](or_index[Two, K](fn_two[K](a1, a2))).contains(x)","proof":["union_index[Two, K](fn_two[K](a1, a2)) = union_index_of_two[K](a1, a2)","Set.new[K](or_index[Two, K](fn_two[K](a1, a2))) = union_index[Two, K](fn_two[K](a1, a2))"]}
{"goal":"exists(k0: Two) { x ∈ fn_two[K](a1, a2, k0) }","proof":["let s0: (Two -> Set[K], K) -> Two satisfy { forall(x0: Two -> Set[K], x1: K) { not or_index[Two, K](x0, x1) or x1 ∈ x0(s0(x0, x1)) } and forall(x2: Two -> Set[K], x3: Two, x4: K) { not x4 ∈ x2(x3) or or_index[Two, K](x2, x4) } }","not x ∈ fn_two[K](a1, a2, s0(fn_two[K](a1, a2), x))","not or_index[Two, K](fn_two[K](a1, a2), x) or x ∈ fn_two[K](a1, a2, s0(fn_two[K](a1, a2), x))","x ∈ Set.new[K](or_index[Two, K](fn_two[K](a1, a2))) = or_index[Two, K](fn_two[K](a1, a2), x)","or_index[Two, K](fn_two[K](a1, a2), x)"]}
{"goal":"x ∈ a1 or x ∈ a2","proof":["let s0: Two satisfy { x ∈ fn_two[K](a1, a2, s0) }","not fn_two[K](a1, a2, s0) ⊆ a1 or not x ∈ fn_two[K](a1, a2, s0) or x ∈ a1","not fn_two[K](a1, a2, s0) ⊆ a2 or not x ∈ fn_two[K](a1, a2, s0) or x ∈ a2","s0 != Two.second or fn_two[K](a1, a2, s0) = a2","s0 != Two.first or fn_two[K](a1, a2, s0) = a1","not fn_two[K](a1, a2, s0) ⊆ a2 or not x ∈ fn_two[K](a1, a2, s0)","not fn_two[K](a1, a2, s0) ⊆ a1 or not x ∈ fn_two[K](a1, a2, s0)","fn_two[K](a1, a2, s0) != a1 or fn_two[K](a1, a2, s0) ⊆ a1","fn_two[K](a1, a2, s0) != a2 or fn_two[K](a1, a2, s0) ⊆ a2","s0 = Two.first or s0 = Two.second","not fn_two[K](a1, a2, s0) ⊆ a1","not fn_two[K](a1, a2, s0) ⊆ a2","fn_two[K](a1, a2, s0) != a2","fn_two[K](a1, a2, s0) != a1","s0 != Two.first","s0 != Two.second","s0 = Two.second"]}
{"goal":"x ∈ union_index_of_two[K](a1, a2) implies x ∈ a1 or x ∈ a2","proof":[]}
{"goal":"x ∈ a1 ∪ a2 = x ∈ union_index_of_two[K](a1, a2)","proof":["x ∈ union_index_of_two[K](a1, a2) or x ∈ a1 ∪ a2","not x ∈ union_index_of_two[K](a1, a2) or not x ∈ a1 ∪ a2","not x ∈ a1 ∪ a2","x ∈ union_index_of_two[K](a1, a2)","x ∈ a2 or x ∈ a1","not x ∈ a2 or x ∈ a1 ∪ a2","not x ∈ a1 or x ∈ a1 ∪ a2","not x ∈ a1","not x ∈ a2","x ∈ a2"]}
{"goal":"union_is_union_index_of_two","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2) = s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2","not s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2) or not s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2 or set_eq_prop[K](union_index_of_two[K](a1, a2), a1 ∪ a2)","s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2) or s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2 or set_eq_prop[K](union_index_of_two[K](a1, a2), a1 ∪ a2)","not set_eq_prop[K](union_index_of_two[K](a1, a2), a1 ∪ a2) or union_index_of_two[K](a1, a2) = a1 ∪ a2","not set_eq_prop[K](union_index_of_two[K](a1, a2), a1 ∪ a2)","s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2) != s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2 or s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2 or set_eq_prop[K](union_index_of_two[K](a1, a2), a1 ∪ a2)","s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ a1 ∪ a2","not s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2)","s0(union_index_of_two[K](a1, a2), a1 ∪ a2) ∈ union_index_of_two[K](a1, a2)"]}
{"goal":"forall(x0: Two) { x ∈ fn_two[K](a1, a2, x0) } implies x ∈ a1","proof":["x ∈ fn_two[K](a1, a2, Two.first)","Two.first != Two.first or fn_two[K](a1, a2, Two.first) = a1","fn_two[K](a1, a2, Two.first) = a1","not x ∈ fn_two[K](a1, a2, Two.first)"]}
{"goal":"forall(x0: Two) { x ∈ fn_two[K](a1, a2, x0) } implies x ∈ a2","proof":["x ∈ fn_two[K](a1, a2, Two.second)","Two.second != Two.second or fn_two[K](a1, a2, Two.second) = a2","fn_two[K](a1, a2, Two.second) = a2","not x ∈ fn_two[K](a1, a2, Two.second)"]}
{"goal":"x ∈ intersection_index_of_two[K](a1, a2) implies x ∈ a1 and x ∈ a2","proof":["let s0: Two satisfy { not x ∈ fn_two[K](a1, a2, s0) or x ∈ a2 }","let s1: Two satisfy { not x ∈ fn_two[K](a1, a2, s1) or x ∈ a1 }","intersection_index[Two, K](fn_two[K](a1, a2)) = intersection_index_of_two[K](a1, a2)","not and_index[Two, K](fn_two[K](a1, a2), x) or x ∈ fn_two[K](a1, a2, s0)","not and_index[Two, K](fn_two[K](a1, a2), x) or x ∈ fn_two[K](a1, a2, s1)","x ∈ Set.new[K](and_index[Two, K](fn_two[K](a1, a2))) = and_index[Two, K](fn_two[K](a1, a2), x)","Set.new[K](and_index[Two, K](fn_two[K](a1, a2))) = intersection_index[Two, K](fn_two[K](a1, a2))","x ∈ intersection_index[Two, K](fn_two[K](a1, a2))","x ∈ Set.new[K](and_index[Two, K](fn_two[K](a1, a2)))","and_index[Two, K](fn_two[K](a1, a2), x)","x ∈ fn_two[K](a1, a2, s0)","x ∈ fn_two[K](a1, a2, s1)","x ∈ a1","x ∈ a2","not x ∈ a2"]}
{"goal":"x ∈ a1 and x ∈ a2 implies forall(x0: Two) { x ∈ fn_two[K](a1, a2, x0) }","proof":["let s0: Two satisfy { not x ∈ fn_two[K](a1, a2, s0) }","not set_eq_prop[K](fn_two[K](a1, a2, s0), a1) or not x ∈ a1 or x ∈ fn_two[K](a1, a2, s0)","not set_eq_prop[K](fn_two[K](a1, a2, s0), a2) or not x ∈ a2 or x ∈ fn_two[K](a1, a2, s0)","s0 != Two.second or fn_two[K](a1, a2, s0) = a2","s0 != Two.first or fn_two[K](a1, a2, s0) = a1","fn_two[K](a1, a2, s0) != a1 or set_eq_prop[K](fn_two[K](a1, a2, s0), a1)","fn_two[K](a1, a2, s0) != a2 or set_eq_prop[K](fn_two[K](a1, a2, s0), a2)","s0 = Two.first or s0 = Two.second","not set_eq_prop[K](fn_two[K](a1, a2, s0), a1) or not x ∈ a1","not set_eq_prop[K](fn_two[K](a1, a2, s0), a2) or not x ∈ a2","not set_eq_prop[K](fn_two[K](a1, a2, s0), a2)","not set_eq_prop[K](fn_two[K](a1, a2, s0), a1)","fn_two[K](a1, a2, s0) != a1","fn_two[K](a1, a2, s0) != a2","s0 != Two.second","s0 != Two.first","s0 = Two.first"]}
{"goal":"x ∈ a1 and x ∈ a2 implies x ∈ intersection_index_of_two[K](a1, a2)","proof":["let s0: (Two -> Set[K], K) -> Two satisfy { forall(x0: Two -> Set[K], x1: K, x2: Two) { not and_index[Two, K](x0, x1) or x1 ∈ x0(x2) } and forall(x3: Two -> Set[K], x4: K) { not x4 ∈ x3(s0(x3, x4)) or and_index[Two, K](x3, x4) } }","not x ∈ a2 or not x ∈ a1 or x ∈ fn_two[K](a1, a2, s0(fn_two[K](a1, a2), x))","x ∈ fn_two[K](a1, a2, s0(fn_two[K](a1, a2), x))","not x ∈ fn_two[K](a1, a2, s0(fn_two[K](a1, a2), x)) or and_index[Two, K](fn_two[K](a1, a2), x)","intersection_index[Two, K](fn_two[K](a1, a2)) = intersection_index_of_two[K](a1, a2)","x ∈ Set.new[K](and_index[Two, K](fn_two[K](a1, a2))) = and_index[Two, K](fn_two[K](a1, a2), x)","not x ∈ intersection_index[Two, K](fn_two[K](a1, a2))","Set.new[K](and_index[Two, K](fn_two[K](a1, a2))) = intersection_index[Two, K](fn_two[K](a1, a2))","not x ∈ Set.new[K](and_index[Two, K](fn_two[K](a1, a2)))","not and_index[Two, K](fn_two[K](a1, a2), x)"]}
{"goal":"x ∈ a1 ∩ a2 implies x ∈ intersection_index_of_two[K](a1, a2)","proof":["not x ∈ a1 ∩ a2 or x ∈ a2","not x ∈ a1 ∩ a2 or x ∈ a1","x ∈ a1","x ∈ a2","not x ∈ a2"]}
{"goal":"x ∈ a1 ∩ a2 = x ∈ intersection_index_of_two[K](a1, a2)","proof":["x ∈ intersection_index_of_two[K](a1, a2) or x ∈ a1 ∩ a2","not x ∈ intersection_index_of_two[K](a1, a2) or not x ∈ a1 ∩ a2","not x ∈ a1 ∩ a2","x ∈ intersection_index_of_two[K](a1, a2)","x ∈ a1","x ∈ a2","not x ∈ a1 or not x ∈ a2 or x ∈ a1 ∩ a2"]}
{"goal":"intersection_is_intersection_index_of_two","proof":["let s0: (Set[K], Set[K]) -> K satisfy { forall(x0: Set[K], x1: Set[K], x2: K) { not set_eq_prop[K](x0, x1) or not x2 ∈ x0 or x2 ∈ x1 } and forall(x3: Set[K], x4: Set[K], x5: K) { not set_eq_prop[K](x3, x4) or not x5 ∈ x4 or x5 ∈ x3 } and forall(x6: Set[K], x7: Set[K]) { s0(x6, x7) ∈ x6 or s0(x6, x7) ∈ x7 or set_eq_prop[K](x6, x7) } and forall(x8: Set[K], x9: Set[K]) { not s0(x8, x9) ∈ x8 or s0(x8, x9) ∈ x8 or set_eq_prop[K](x8, x9) } and forall(x10: Set[K], x11: Set[K]) { not s0(x11, x10) ∈ x10 or s0(x11, x10) ∈ x10 or set_eq_prop[K](x11, x10) } and forall(x12: Set[K], x13: Set[K]) { not s0(x12, x13) ∈ x12 or not s0(x12, x13) ∈ x13 or set_eq_prop[K](x12, x13) } }","s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2) = s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2","not s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2) or not s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2 or set_eq_prop[K](intersection_index_of_two[K](a1, a2), a1 ∩ a2)","s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2) or s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2 or set_eq_prop[K](intersection_index_of_two[K](a1, a2), a1 ∩ a2)","not set_eq_prop[K](intersection_index_of_two[K](a1, a2), a1 ∩ a2) or intersection_index_of_two[K](a1, a2) = a1 ∩ a2","not set_eq_prop[K](intersection_index_of_two[K](a1, a2), a1 ∩ a2)","s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2) != s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2 or s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2 or set_eq_prop[K](intersection_index_of_two[K](a1, a2), a1 ∩ a2)","s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ a1 ∩ a2","not s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2)","s0(intersection_index_of_two[K](a1, a2), a1 ∩ a2) ∈ intersection_index_of_two[K](a1, a2)"]}
{"goal":"add_test","proof":["a1 + a2 ⊆ universe[Sum[K1, K2]]"]}
{"goal":"product_test","proof":["a1.product(a2) ⊆ universe[Product[K1, K2]]"]}
{"goal":"exists(k0: Set[K], k1: Set[L], k2: K -> L) { forall(x0: K) { x0 ∈ k0 implies k2(x0) ∈ k1 } }","proof":["let s0: Set[L] satisfy { true }","let s1: K -> L satisfy { true }","let s2: (Set[K], Set[L], K -> L) -> K satisfy { forall(x0: Set[K], x1: Set[L], x2: K -> L) { s2(x0, x1, x2) ∈ x0 } and forall(x3: Set[L], x4: K -> L, x5: Set[K]) { not x4(s2(x5, x3, x4)) ∈ x3 } }","s2(empty[K], s0, s1) ∈ empty[K]","not empty[K].is_empty or not s2(empty[K], s0, s1) ∈ empty[K]","not empty[K].is_empty","empty[K] != empty[K] or empty[K].is_empty","empty[K] != empty[K]"]}
{"goal":"not f(x).contains(x)","proof":["x ∈ f(x) != p(f, x)","x ∈ Set.new[K](p(f)) = p(f, x)","not x ∈ f(x) or not p(f, x)","not p(f, x)","not x ∈ Set.new[K](p(f)) or p(f, x)","x ∈ Set.new[K](p(f))"]}
{"goal":"omega != f(x)","proof":["x ∈ f(x)"]}
{"goal":"cardinal_lt_power","proof":["let (s0: (K -> Set[K], Set[K]) -> K, s1: K -> Set[K] -> Set[K]) satisfy { forall(x0: K -> Set[K], x1: Set[K]) { not is_surjective[K, Set[K]](x0) or x0(s0(x0, x1)) = x1 } and forall(x2: K -> Set[K], x3: K) { s1(x2) != x2(x3) or is_surjective[K, Set[K]](x2) } }","not s0(f, omega) ∈ omega or f(s0(f, omega)) != omega","s0(f, omega) ∈ f(s0(f, omega)) != p(f, s0(f, omega))","not is_surjective[K, Set[K]](f) or f(s0(f, omega)) = omega","f(s0(f, omega)) = omega","s0(f, omega) ∈ Set.new[K](p(f)) = p(f, s0(f, omega))","s0(f, omega) ∈ f(s0(f, omega)) or p(f, s0(f, omega))","not s0(f, omega) ∈ omega","not s0(f, omega) ∈ Set.new[K](p(f))","not p(f, s0(f, omega))","not s0(f, omega) ∈ f(s0(f, omega))","s0(f, omega) ∈ f(s0(f, omega))"]}
